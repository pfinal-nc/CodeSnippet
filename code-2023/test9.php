<?php/** * Author: PFinal南丞 * Date: 2023/12/5 * Email: <lampxiezi@163.com> */// 协程可以简单理解为轻量级的线程, 只不过这个线程是用户态的, 不需要操作系统参与. 创建销毁和切换的成本非常低, 和线程不同的是写成没法利用多核CPU// 协程就是通过控制函数的合作, 而不需要操作系统参与, 用同步的代码来达到异步的效果use Swoole\Coroutine;use function Swoole\Coroutine\run;////echo "main start" . PHP_EOL;//run(function () {//    echo "coro " . Coroutine::getcid() . " start\n";//    Coroutine::create(function () {//        echo "coro " . Coroutine::getcid() . " start\n";//        Coroutine::sleep(.2);//        echo "coro " . Coroutine::getcid() . " end\n";//    });//    echo "coro " . Coroutine::getcid() . " do not wait children coroutine\n";//    Coroutine::sleep(.1);//});run(function () {    $id = go(function () {        $id = Co::getUid();        echo "start coro $id\n";        Co::suspend($id);        echo "resume coro $id @1\n";        Co::suspend($id);        echo "resume coro $id @2\n";    });    echo "start to resume $id @1\n";    Co::resume($id);    echo "start to resume $id @2\n";    Co::resume($id);    echo "main\n";});